package eagolint

import (
	"testing"
	"github.com/stretchr/testify/assert"
)

func TestIsGenerated(t *testing.T) {
	generatedFileContents := []byte("// Code generated by Empedocles. DO NOT EDIT.")
	generatedFileContentsGoBinData := []byte("// Code generated for package kubernetes by go-bindata DO NOT EDIT. (@generated)")
	nonGeneratedFileContents := []byte("// This is not generated code.")
	tests := []struct {
		fileContents []byte
		want    bool
	}{
		{generatedFileContents, true},
		{generatedFileContentsGoBinData, true},
		{nonGeneratedFileContents, false},
	}

	for _, test := range tests {
		got := isGenerated(test.fileContents)
		assert.Equal(t, test.want, got)
	}
}

func TestIsPunctuated(t *testing.T) {
	tests := []struct {
		line string
		want bool
	}{
		{
			line: "This is punctuated!",
			want: true,
		},
		{
			line: "This is punctuated!!!!",
			want: true,
		},
		{
			line: "Is this punctuated?",
			want: true,
		},
		{
			line: "This is punctuated.",
			want: true,
		},
		{
			line: "This is punctuated (because of the parentheses)",
			want: true,
		},
		{
			line: "This is punctuated [because of the brackets]",
			want: true,
		},
		{
			line: "This is punctuated {because of the brackets}",
			want: true,
		},
		{
			line: "This is not punctuated",
			want: false,
		},
		{
			line: "This is not punctuated. Because",
			want: false,
		},
		{
			line: "This is not punctuated!!!s",
			want: false,
		},
	}

	for _, test := range tests {
		got := isPunctuated(test.line)
		assert.Equal(t, test.want, got)
	}
}
